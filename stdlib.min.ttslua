--[[
    Tabletop Simulator Standard Library (tts-stdlib).
    Created by Red Mushroom.
    Profile: https://steamcommunity.com/id/Red_Mush
    Github: https://github.com/raeon/tts-stdlib
    License:
        Copyright (c) 2018 Joris Klein Tijssink

        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:

        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.

        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
]]
do local a={}local b={}local c=true;local function d(name,e,f)if f then _G[name]=e;return end;a[name]=true;if c then b[name]=_G[name]_G[name]=e else b[name]=e end end;local function g()for h in pairs(a)do local i=_G[h]_G[h]=b[h]b[h]=i end;c=not c end;local function j()if not c then return end;g()end;local function k()if c then return end;g()end;local l=0;local function m()l=l+1;return l end;local function n(o,h)return function(p)if p~=nil then o[h]=p end;return o[h]end end;local function q(o)for h in pairs(o)do return true end;return false end;local function r(o)local s=0;for h in pairs(o)do s=s+1 end;return s end;local function t(o,u)local v={}for h,p in pairs(o)do if u(h,p)then v[h]=p end end;return v end;local function w(x)return{_G[x.func](table.unpack(x.args))}end;local function y(z,name,...)return table.unpack(z.call('__invoke',{func=name,args={...}}))end;d('assign',m)d('__invoke',w,true)d('invoke',y)d('any',q)d('count',r)d('filter',t)local A={name='Unnamed',description='',version=1,author='',profile='',license='',tracing=false,debugging=false}for h,p in pairs(A)do d(h,n(A,h))end;A.stdlib=3;local B=tostring;local tostring;tostring=function(z)if type(z)=='table'then if z.___mock then return tostring(z)end;local C='{'local q=false;for h,p in pairs(z)do C=C..(q and', 'or'')..'"'..tostring(h)..'": '..tostring(p)q=true end;return C..'}'end;return B(z)end;local function D(...)local C='['..name()..' v'..tostring(version())..'] 'for h,p in pairs({...})do C=C..tostring(p)end;return C end;local function E(name,F,G)G=G or function()return true end;local H=function(...)if G()then printToAll(D(...),F)end end;local I=function(...)if G()then broadcastToAll(D(...),F)end end;local J=function(K,...)if G()then printToColor(D(...),K,F)end end;d(name,H)d(name..'Broadcast',I)d(name..'Silent',J)return H,I,J end;local L,M,N=E('trace',{255,0,255},tracing)local O,P,Q=E('debug',{0,255,255},debugging)local R,S,T=E('info',{0,255,0})local U,V,W=E('warn',{255,255,0})local X,Y,Z=E('fatal',{255,0,0})local _=coroutine.yield;local a0={}local a1=false;local a2={}local a3={}local a4={}local a5={}local function a6(a7,a8,a9)local aa,ab,ac,ad,ae,af,ag;ad=true;while ad do aa={coroutine.resume(a8,table.unpack(a9 or{}))}ab=aa[1]af=aa[2]ac=coroutine.status(a8)~='dead'ad=ab and ac;ae=ab and ac and 2 or 1;for ah=1,ae,1 do aa[ah]=aa[ah+ae]aa[ah+ae]=nil end;if not ab then X('coroutine #',a7,' errored: ',af)return end;if not ad then return table.unpack(aa)end;ag=a5[af.action]if not ag then X('coroutine #',a7,' tried to invoke unknown action: ',af.action)return end;ad,a9=ag(a7,a8,table.unpack(af.args))end;return table.unpack(a9)end;local function ai()local q=true;while q and a1 do q=false;_async=true;for aj,ak in pairs(a0)do q=true;if ak.poll()then if ak.call then ak.call()else a6(ak.id,ak.co)end;a0[aj]=nil end end;_async=false;coroutine.yield(0)end;a1=false;return 1 end;local function al()if a1 then return end;a1=true;startLuaCoroutine(self,'__poller')end;d('__poller',ai,true)local _async=false;local function am(a7,a8,an,ao)local ap=m()a2[an]=a2[an]or{}a2[an][ap]={id=a7,co=a8,call=ao}return ap end;local function aq(a7,a8,ar,ao)local aj=m()a0[aj]={id=a7,co=a8,poll=ar,call=ao}al()return aj end;local function as(name,e)a5[name]=e;d(name,function(...)return _({action=name,args={...}})end)end;as('halt',function(a7,a8)return false,{}end)as('identify',function(a7,a8)return true,{a7}end)as('sleep',function(a7,a8,at)local au=os.clock()+at/1000;aq(a7,a8,function()return os.clock()>=au end)return false,{}end)as('await',function(a7,a8,an,at)if a4[an]then local av=a4[an][a8]a4[an][a8]=nil;if not q(a4[an])then a4[an]=nil end;if av then return true,av end elseif a3[an]and a3[an][a8]then a3[an][a8]=nil;if not q(a3[an])then a3[an]=nil end end;if not at then am(a7,a8,an)return false,{}end;local au=os.clock()+at/1000;local ap,aj;aj=aq(a7,a8,function()return os.clock()>=au end,function()a2[an][ap]=nil;a6(a7,a8,{false})end)ap=am(a7,a8,an,function(a9)a0[aj]=nil;a6(a7,a8,{true,table.unpack(a9)})end)return false,{}end)as('cycle',function(a7,a8,aw)local r=0;local ax=1+(_async and 1 or 0)+(aw or 0)aq(a7,a8,function()r=r+1;return r>ax end)return false,{}end)as('yield',function(a7,a8,...)aq(a7,a8,function()return true end)return false,{...}end)local function ay(an)a3[an]=a3[an]or{}a3[an][coroutine.running()]=true end;local function az(an,...)local r=0;local a9={...}for ap,aA in pairs(a2[an]or{})do if aA.call then aA.call(a9)else a6(aA.id,aA.co,a9)end;a2[an][ap]=nil;r=r+1 end;if not a3[an]then return end;a4[an]=a4[an]or{}for a8 in pairs(a3[an])do if coroutine.status(a8)~='dead'then a4[an][a8]=a9 end end;a3[an]=nil end;local function aB(e,name)if not e then return nil end;return function(...)local a7=name and name..m()or m()local a8=coroutine.create(e)local aa={a6(a7,a8,{...})}return table.unpack(aa)end end;local function aC(e,aD)local a7='thread'..m()local a8=coroutine.create(function()local aE=true;while aE do local au=os.clock()local aF,av=pcall(e)if not aF then X('thread error: ',av)return end;if not av then break end;aE=av;sleep(aD)end end)aq(a7,a8,function()return true end)end;d('prewait',ay)d('__resume',az,true)d('resume',az)d('async',aB)d('thread',aC)local function aG(e)return aB(function(aH,...)local z=getObjectFromGUID(aH)local aI='desyncInvoke'..tostring(m())local a9={...}yield(aI)cycle()local aa=nil;local aF,aJ=pcall(function()aa={e(table.unpack(a9))}end)y(z,'__resume',aI,aF,aa)return aF,aa or aJ end,'desyncFunc')end;local function aK(z,name,...)local an=y(z,name,self.getGUID(),...)local aF,av=await(an)if not aF then error(av)end;return table.unpack(av)end;d('desyncFunc',aG)d('desyncInvoke',aK)local function aL(name)return function(x,...)local aa=y(x.___object,name,x,...)local aF=aa[1]for ah,av in ipairs(aa)do aa[ah]=aa[ah+1]aa[ah+1]=nil end;if not aF then error(aa[1])end;return table.unpack(aa)end end;local aM={__index=aL('__realIndex'),__newindex=aL('__realNewIndex'),__call=aL('__realCall'),__tostring=aL('__realToString'),__unm=aL('__realUnm'),__add=aL('__realAdd'),__sub=aL('__realSub'),__mul=aL('__realMul'),__div=aL('__realDiv'),__mod=aL('__realMod'),__pow=aL('__realPow'),__concat=aL('__realConcat'),__eq=aL('__realEq'),__lt=aL('__realLt'),__gt=aL('__realGt')}local function aN(o)if not o.___object then local aO=getObjectFromGUID(o.___guid)o.___object=aO;if not aO then error('failed to resolve mocked object: '..o.___guid)end end;return setmetatable(o,aM)end;local function aP(aO,h)return aN({___mock=true,___object=aO,___guid=aO.getGUID(),___key=h})end;local function aQ(o)if type(o)~='table'then return o end;if not o.___mock then return o end;if o.___guid==self.getGUID()then return _G[o.___key]end;return aN(o)end;local function aR(e)return function(...)local a9={...}for h,p in pairs(a9)do a9[h]=aQ(p)end;return{pcall(e,table.unpack(a9))}end end;d('mock',aP)d('resolve',aQ)d('__realIndex',aR(function(o,h)return o[h]end),true)d('__realNewIndex',aR(function(o,h,p)o[h]=p end),true)d('__realCall',aR(function(o,...)return o(...)end),true)d('__realToString',aR(function(o)return B(o)end),true)d('__realUnm',aR(function(o)return-o end),true)d('__realAdd',aR(function(aS,aT)return aS+aT end),true)d('__realSub',aR(function(aS,aT)return aS-aT end),true)d('__realMul',aR(function(aS,aT)return aS*aT end),true)d('__realDiv',aR(function(aS,aT)return aS/aT end),true)d('__realMod',aR(function(aS,aT)return aS%aT end),true)d('__realPow',aR(function(aS,aT)return aS^aT end),true)d('__realConcat',aR(function(aS,aT)return aS..aT end),true)d('__realEq',aR(function(aS,aT)return aS==aT end),true)d('__realLt',aR(function(aS,aT)return aS<aT end),true)d('__realGt',aR(function(aS,aT)return aS>aT end),true)local function aU()local aV=self.getLuaScript()local aW,aX=aV:find('%(\'upgrade\',%s*%w-%)%s*end')return aV:sub(1,aX)end;local aY=nil;local function aZ()if aY then aY.destruct()aY=nil end;aY=spawnObject({type='BlockTriangle',position={0,220,0},scale={0,0,0},sound=false})aY.setLock(true)aY.interactable=false;return aY end;local a_=aG(function(aH)local pcall=_G.pcall;local b0=_G.body;local O=_G.debug;local ipairs=_G.ipairs;local setmetatable=_G.setmetatable;local b1=getObjectFromGUID(aH)if not b1 then O('__eval: no such object: ',aH)return nil,'evaluating arbitrary code but original object does not exist'end;j()setmetatable(_G,{__index=function(aW,h)return aP(b1,h)end,__newindex=function(aW,h,p)aP(b1,'_G')[h]=p end})local aa={pcall(b0)}local aF=aa[1]or false;for ah,p in ipairs(aa)do aa[ah]=aa[ah+1]end;setmetatable(_G,nil)k()if not aF then aa=aa[1]end;return aF,aa end)local function b2(b3)local b4=aZ()local b5={tracing=tostring(tracing()),debugging=tostring(debugging()),code=' '..b3 ..' ',guid=self.getGUID()}local aV=[[name('Proxy for {{guid}}')description('Object used to evaluate arbitrary code.')version(1)tracing({{tracing}})debugging({{debugging}})function body(){{code}}end;local a='{{guid}}'on('Load',function()if self.script_state:len()>0 then trace('Destroying')self.destruct()return end;local b=getObjectFromGUID(a)if not b then self.destruct()return end;trace('Notifying')invoke(b,'__resume','proxy')end)on('Save',function()self.script_state=JSON.encode({true})end)]]aV=aV:gsub('{{(%a-)}}',function(b6)return b5[b6]end)aV=aU()..'\n\n'..aV;ay('proxy')b4.setLuaScript(aV)local aF=await('proxy',200)if not aF then b4.destruct()aY=nil;return false,'syntax error'end;cycle()local aF,aa=aK(b4,'__eval',self.getGUID())if type(aa)=='table'then for ah,av in ipairs(aa)do aa[ah]=aQ(aa[ah])end end;return aF,aa end;d('__eval',a_)d('eval',b2)local b7={}local function b8(b9,...)local ba=b7[b9]or{}local av=nil;for ah=1,#ba,1 do local e=ba[ah]local bb={e(...)}if#bb>0 then av=av or bb end end;return table.unpack(av or{})end;local function bc(b9,e)local ba=b7[b9]if not ba then _G[b9]=function(...)return b8(b9,...)end;ba={}b7[b9]=ba end;table.insert(ba,aB(e,b9))end;local function bd(b9,e)bc('on'..b9,e)end;d('fire',b8)d('listen',bc)d('on',bd)local be={}bd('ObjectLeaveContainer',function(bf,z)if bf.getQuantity()==0 then be.type='deck'be.stack=bf.getGUID()be.bottom=be.top;be.top=z.getGUID()if be.bottom then local a9=be;be={}b8('onStackDisband',a9.stack,a9.bottom,a9.top)end elseif bf.getQuantity()==1 then be.type='stack'be.stack=bf.getGUID()end end)bd('ObjectSpawn',function(z)if be.type~='stack'then return end;be.bottom=be.top;be.top=z.getGUID()if be.bottom then local a9=be;be={}b8('onStackDisband',a9.stack,a9.bottom,a9.top)end end)local bg={}bd('ObjectSpawn',function(z)if z.getQuantity()<2 then return end;if z.tag=='Deck'then local bh=z.getObjects()if bh[1].guid~=bg.top or bh[2].guid~=bg.bottom then return end;local a9=bg;bg={}b8('onStackForm',z.getGUID(),a9.bottom,a9.top)return end;if z.getGUID()~=bg.bottom then return end;local a9=bg;bg={}b8('onStackForm',z.getGUID(),a9.bottom,a9.top)end)bd('ObjectDestroy',function(z)bg.bottom=bg.top;bg.top=z.getGUID()end)local function bi(type,bj,bk)local a9={bj}if bk then table.insert(a9,bk)end;table.insert(a9,self)table.insert(a9,'__resumeWeb')local ax=await(WebRequest[type](table.unpack(a9)))if ax.is_error then return nil,ax.error end;return{download_progress=ax.download_progress,error=ax.error,is_error=ax.is_error,is_done=ax.is_done,text=ax.text,upload_progress=ax.upload_progress,url=ax.url},nil end;d('__resumeWeb',function(ax)return az(ax,ax)end)d('webGet',function(bj)return bi('get',bj)end)d('webPost',function(bj,bk)return bi('post',bj,bk)end)d('webPut',function(bj,bk)return bi('get',bj,bk)end)local bl=self;local function bm(name,e)local bn=_G[name]d(name,function(...)return e(bn,...)end)end;bm('spawnObject',function(e,x)local a7=identify()x.callback='__resumeSpawn'x.callback_owner=bl;x.params={id=a7}local z=e(x)local aW,z=await(a7)return await(a7)end)bm('takeObject',function(e,bo,x)x=x or{}local a7=identify()x.callback='__resumeTake'x.callback_owner=bl;x.params={id=a7}ay(a7)bo.takeObject(x)return await(a7)end)d('__resumeSpawn',function(z,a9)return az(a9.id,z)end)d('__resumeTake',function(z,a9)return az(a9.id,z)end)local function bp(bj)if _PREVIOUS then local bq=_PREVIOUS;bq.stdlib=bq.stdlib or 1;if bq.interact==nil then bq.interact=true end;local br=getObjectFromGUID(bq.guid)local ab=version()>bq.version;L('upgrade: success: ',ab)if not ab then L('upgrade: no increase in version')if bq.stdlib==2 then L('upgrade: previous was stdlib v2, using _invoke instead of __invoke')br.call('_invoke',{func='resume',args={'upgrade',false}})elseif bq.stdlib>=3 then y(br,'__resume','upgrade',false)end;L('upgrade: destroying self, halting')self.destruct()halt()end;if bq.stdlib==2 then L('upgrade: previous was stdlib v2, using _invoke instead of __invoke')br.call('_invoke',{func='resume',args={'upgrade',true}})elseif bq.stdlib>=3 then y(br,'__resume','upgrade',true)end;L('upgrade: moving away original')br.setScale({0,0,0})br.setPosition({0,-200,0})br.setLock(true)L('upgrade: destroying original')br.destruct()L('upgrade: assuming original position')self.setPosition(bq.position)self.setRotation(bq.rotation)self.setVelocity(bq.velocity)self.interactable=bq.interact;self.setLock(bq.lock)return end;local ax,aJ=webGet(bj)if aJ then L('upgrade: web error: ',aJ)return end;if ax.text==self.getLuaScript()then L('upgrade: identical script')return end;A.guid=self.getGUID()A.position=self.getPosition()A.rotation=self.getRotation()A.velocity=self.getVelocity()A.lock=self.getLock()A.interact=self.interactable;local bs=self.clone({position={0,200,0}})bs.setLock(true)bs.interactable=false;bs.setTable('_PREVIOUS',A)ay('upgrade')bs.setLuaScript(ax.text)L('upgrade: waiting for callback')local bt,ab=await('upgrade',200)if not bt then L('upgrade: callback timed out')bs.destruct()return end;L('upgrade: callback replied with success: ',ab)if ab then halt()end end;d('upgrade',bp)end
